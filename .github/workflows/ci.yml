name: Go CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-lint:
    name: Test and Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.x'
          cache: true

      - name: Run tests
        run: go test -v ./...

      - name: Run linter
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.59
          args: --timeout=3m

      - name: Build
        run: go build -v .

  release:
    name: Create Release
    if: startsWith(github.ref, 'refs/tags/v')
    needs: test-and-lint
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed to create releases
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.x'
          cache: true

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Build release binaries
        run: |
          PROJECT_NAME=goforge
          VERSION=${{ steps.get_version.outputs.VERSION }}
          LDFLAGS="-X 'github.com/night-slayer18/goforge/cmd.version=${VERSION}'"
          
          # Build for different platforms
          GOOS=linux GOARCH=amd64 go build -ldflags="$LDFLAGS" -o "dist/${PROJECT_NAME}-linux-amd64" .
          GOOS=windows GOARCH=amd64 go build -ldflags="$LDFLAGS" -o "dist/${PROJECT_NAME}-windows-amd64.exe" .
          GOOS=darwin GOARCH=amd64 go build -ldflags="$LDFLAGS" -o "dist/${PROJECT_NAME}-darwin-amd64" .
          GOOS=darwin GOARCH=arm64 go build -ldflags="$LDFLAGS" -o "dist/${PROJECT_NAME}-darwin-arm64" .

      - name: Create archives
        run: |
          cd dist
          tar -czf goforge-linux-amd64.tar.gz goforge-linux-amd64
          zip goforge-windows-amd64.zip goforge-windows-amd64.exe
          tar -czf goforge-darwin-amd64.tar.gz goforge-darwin-amd64
          tar -czf goforge-darwin-arm64.tar.gz goforge-darwin-arm64
          cd ..

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*.tar.gz
            dist/*.zip
          body: "Release ${{ steps.get_version.outputs.VERSION }}"
          draft: false
          prerelease: false
